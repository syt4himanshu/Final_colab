module.exports = {
    apps: [
        {
            name: 'student-mentor-backend',
            script: 'server.js',
            instances: 'max',
            exec_mode: 'cluster',
            env: {
                NODE_ENV: 'development',
                PORT: 5000,
            },
            env_production: {
                NODE_ENV: 'production',
                PORT: 5000,
                DB_HOST: process.env.DB_HOST,
                DB_PORT: process.env.DB_PORT,
                DB_USER: process.env.DB_USER,
                DB_PASSWORD: process.env.DB_PASSWORD,
                DB_NAME: process.env.DB_NAME,
                JWT_ACCESS_SECRET: process.env.JWT_ACCESS_SECRET,
                JWT_REFRESH_SECRET: process.env.JWT_REFRESH_SECRET,
                JWT_ACCESS_EXPIRES: process.env.JWT_ACCESS_EXPIRES,
                JWT_REFRESH_EXPIRES: process.env.JWT_REFRESH_EXPIRES,
                CORS_ORIGIN: process.env.CORS_ORIGIN,
            },
            error_file: './logs/err.log',
            out_file: './logs/out.log',
            log_file: './logs/combined.log',
            time: true,
            max_memory_restart: '1G',
            node_args: '--max-old-space-size=1024',
            watch: false,
            ignore_watch: ['node_modules', 'logs', 'uploads'],
            merge_logs: true,
            log_date_format: 'YYYY-MM-DD HH:mm:ss Z',
            kill_timeout: 5000,
            wait_ready: true,
            listen_timeout: 10000,
            autorestart: true,
            max_restarts: 10,
            min_uptime: '10s',
        },
    ],

    deploy: {
        production: {
            user: 'deploy',
            host: process.env.DEPLOY_HOST,
            ref: 'origin/main',
            repo: process.env.REPO_URL,
            path: '/var/www/student-mentor-backend',
            'pre-deploy-local': '',
            'post-deploy': 'npm install && npm run migrate && pm2 reload ecosystem.config.js --env production',
            'pre-setup': '',
            'post-setup': 'npm install',
            env: {
                NODE_ENV: 'production',
            },
        },
        staging: {
            user: 'deploy',
            host: process.env.STAGING_HOST,
            ref: 'origin/develop',
            repo: process.env.REPO_URL,
            path: '/var/www/student-mentor-backend-staging',
            'pre-deploy-local': '',
            'post-deploy': 'npm install && npm run migrate && pm2 reload ecosystem.config.js --env production',
            'pre-setup': '',
            'post-setup': 'npm install',
            env: {
                NODE_ENV: 'staging',
            },
        },
    },
};
